<h2>The Task</h2>
<br />
<p>
    Create an ASP.Net MVC or ASP.NET Core MVC web application that includes a page that will display on screen the numbers from 1 to 100 (by default), but for multiples of 3 display “Three” instead of the number, and for multiples of 5 display “Five”. For numbers which are multiples of both 3 and 5 display “Eurofins”.
    The start and end number should be customisable by the user, e.g. there should be two form fields (one for the start number and one for the end number). If no start number is explicitly provided it should default to 1. If no end number is provided it should default to 100.
    <br />
    Bonus: Each time the action method is called the start number, end number and the date/time of the call should be stored in a database. Use EF code first for this.
    <br />
    <ul>
        <li>The logic to determine the text to display based on the number input may need to be reused in other areas of the application in the future, this should be considered in the design</li>	
        <li>Text on the web page should be updated without causing a full page refresh</li>	
        <li>Any server-side code should be written in C#. Client-side code should be written in JavaScript (including any client side libraries you wish to use).</li>	
        <li>The look and feel of the web page should be considered as an opportunity for you to demonstrate your design skills.</li>
    </ul>

</p>

<br />
<div>
    <h3>What went well and things I have learnt</h3>
    <ul>
        <li>My experience with Java helped me a lot in contructing the classes and writing the basic logic for the task.</li>
        <li>I had limited experience with HTML and CSS prior to this task, I went through the Codecademy course on HTML and Bootstrap. Overall, I learnt a lot about the front-end mechanics while working on this project.</li>
        <li>Had a positive first experience working with ASP.NET, I found the .NET framework and the Model-View-Controller system to be intuitive. The separation of components such as the MVC format made it simpler to spot errors and correct them.</li>
    </ul>
</div>

<br />
<div>
    <h3>What were the main challenges of the task and potential improvements</h3>
    <ul>
        <li>The most difficult part of the task was adding the partial page refresh functionality. Having not much experince with Ajax or Javascript in general, it was not the easiest however I managed to complete it which I am very proud of.</li>
        <li>I found designing the look of the website to be slight challenge too, it has been a long time since I've worked on designing something to be aesthetic. This is something I am looking to work on as I study HTML and CSS.</li>
        <li>A potential improvement could be adding further functionality to the database. Having options to edit and delete records from the database is something to potentially include in the future. </li>
    </ul>
</div>
